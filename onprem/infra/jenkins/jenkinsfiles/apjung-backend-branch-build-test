import groovy.json.JsonOutput
import jdk.jfr.ContentType

pipeline {
    agent {
        label 'apjung-backend-branch-test-agent'
    }
    stages {
        stage('Start') {
            steps {
                slackSend (channel: '#apjung-log', color: '#00FF00', message: """${ghprbSourceBranch} 브랜치 빌드 테스트 시작""")
            }
        }
        stage('Git checkout') {
            steps {
                git branch: "${ghprbSourceBranch}",
                    credentialsId: 'apjung-backend',
                    url: 'git@github.com:cocoding-ss/apjung-backend.git'
            }
        }
        stage('Gradle build') {
            steps {
                script {
                    sh (
                            script: '''#!/bin/bash
                                ./gradlew -Dfile.encoding=UTF-8 clean build -Pprofile=test -Dspring.profiles.active=test
                            ''',
                            returnStdout: true
                    )
                }
            }
        }
    }
    post {
        success {
            slackSend (channel: '#apjung-log', color: '#00FF00', message: """:white_check_mark: 성공 : ${ghprbSourceBranch} 브랜치 빌드 테스트
파이프라인 : ${env.JOB_NAME} [${env.BUILD_NUMBER}]
확인 : (${env.BUILD_URL})""")
        }
        failure {
            slackSend (channel: '#apjung-log', color: '#00FF00', message: """:octagonal_sign: 실패 : ${ghprbSourceBranch} 브랜치 빌드 테스트
파이프라인 : ${env.JOB_NAME} [${env.BUILD_NUMBER}]
확인 : (${env.BUILD_URL})""")
        }
    }
}
